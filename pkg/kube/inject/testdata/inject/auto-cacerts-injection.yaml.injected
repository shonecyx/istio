apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: auto-cacerts-injection
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auto-cacerts-injection
  strategy: {}
  template:
    metadata:
      annotations:
        application.tess.io/app-container-name: dummy-app-1
        application.tess.io/sidecars-stackId: '{ "dummy-app-2": "nodejs.marketplace"}'
        application.tess.io/stackId: raptor.marketplace
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        proxy.istio.io/config: '{ "proxyMetadata": {"INJECT_AUTO_CERT": "true"}}'
        sidecar.istio.io/interceptionMode: REDIRECT
        sidecar.istio.io/status: '{"initContainers":["istio-validation","istio-auto-cacert"],"containers":["istio-proxy"],"volumes":["build-cacerts","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null}'
        traffic.sidecar.istio.io/excludeInboundPorts: "15020"
        traffic.sidecar.istio.io/includeInboundPorts: '*'
        traffic.sidecar.istio.io/includeOutboundIPRanges: '*'
      creationTimestamp: null
      labels:
        app: auto-cacerts-injection
        istio.io/rev: default
        security.istio.io/tlsMode: istio
        service.istio.io/canonical-name: auto-cacerts-injection
        service.istio.io/canonical-revision: latest
        topology.istio.io/network: network1
    spec:
      containers:
      - image: fake.docker.io/google-samples/hello-go-gke:1.0
        name: dummy-app-1
        ports:
        - containerPort: 80
          name: http
        resources: {}
        volumeMounts:
        - mountPath: /ebay/config/cacerts
          name: istio-auto-ca-root-cert
          readOnly: true
      - env:
        - name: NODE_EXTRA_CA_CERTS
          value: /usr/local/share/istio-auto-ca-certificates/istio-auto-root-ca-cert.pem
        image: fake.docker.io/google-samples/hello-go-gke:1.0
        name: dummy-app-2
        ports:
        - containerPort: 90
          name: http
        resources: {}
        volumeMounts:
        - mountPath: /usr/local/share/istio-auto-ca-certificates
          name: istio-auto-ca-root-cert
          readOnly: true
      - args:
        - proxy
        - sidecar
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --serviceCluster
        - auto-cacerts-injection.$(POD_NAMESPACE)
        - --proxyLogLevel=warning
        - --proxyComponentLogLevel=misc:error
        - --log_output_level=default:info
        - --concurrency
        - "2"
        env:
        - name: JWT_POLICY
          value: third-party-jwt
        - name: PILOT_CERT_PROVIDER
          value: istiod
        - name: CA_ADDR
          value: istiod.istio-system.svc:15012
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: CANONICAL_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service.istio.io/canonical-name']
        - name: CANONICAL_REVISION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service.istio.io/canonical-revision']
        - name: PROXY_CONFIG
          value: |
            {"proxyMetadata":{"INJECT_AUTO_CERT":"true"}}
        - name: ISTIO_META_POD_PORTS
          value: |-
            [
                {"name":"http","containerPort":80}
                ,{"name":"http","containerPort":90}
            ]
        - name: ISTIO_META_APP_CONTAINERS
          value: dummy-app-1,dummy-app-2
        - name: ISTIO_META_CLUSTER_ID
          value: Kubernetes
        - name: ISTIO_META_INTERCEPTION_MODE
          value: REDIRECT
        - name: ISTIO_METAJSON_ANNOTATIONS
          value: |
            {"application.tess.io/app-container-name":"dummy-app-1","application.tess.io/sidecars-stackId":"{ \"dummy-app-2\": \"nodejs.marketplace\"}","application.tess.io/stackId":"raptor.marketplace","proxy.istio.io/config":"{ \"proxyMetadata\": {\"INJECT_AUTO_CERT\": \"true\"}}"}
        - name: ISTIO_META_WORKLOAD_NAME
          value: auto-cacerts-injection
        - name: ISTIO_META_OWNER
          value: kubernetes://apis/apps/v1/namespaces/default/deployments/auto-cacerts-injection
        - name: ISTIO_META_MESH_ID
          value: cluster.local
        - name: TRUST_DOMAIN
          value: cluster.local
        - name: INJECT_AUTO_CERT
          value: "true"
        - name: AUTO_ROOT_CA_PATH
          value: /usr/local/share/istio-auto-ca
        - name: ISTIO_META_NETWORK
          value: network1
        image: gcr.io/istio-testing/proxyv2:latest
        name: istio-proxy
        ports:
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz/ready
            port: 15021
          initialDelaySeconds: 1
          periodSeconds: 2
          timeoutSeconds: 3
        resources:
          limits:
            cpu: "2"
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1337
          runAsNonRoot: true
          runAsUser: 1337
        volumeMounts:
        - mountPath: /var/run/secrets/istio
          name: istiod-ca-cert
        - mountPath: /var/lib/istio/data
          name: istio-data
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /var/run/secrets/tokens
          name: istio-token
        - mountPath: /etc/istio/pod
          name: istio-podinfo
        - mountPath: /usr/local/share/istio-auto-ca
          name: istio-auto-ca
          readOnly: true
      initContainers:
      - args:
        - istio-iptables
        - -p
        - "15001"
        - -z
        - "15006"
        - -u
        - "1337"
        - -m
        - REDIRECT
        - -i
        - '*'
        - -x
        - ""
        - -b
        - '*'
        - -d
        - 15090,15021,15020
        - --run-validation
        - --skip-rule-apply
        env:
        - name: INJECT_AUTO_CERT
          value: "true"
        image: gcr.io/istio-testing/proxyv2:latest
        name: istio-validation
        resources:
          limits:
            cpu: "2"
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1337
          runAsNonRoot: true
          runAsUser: 1337
      - args:
        - -c
        - /build/import-auto-root-ca.sh
        command:
        - /bin/sh
        imagePullPolicy: IfNotPresent
        name: istio-auto-cacert
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 200m
            memory: 128Mi
        securityContext:
          runAsGroup: 1337
          runAsNonRoot: true
          runAsUser: 1337
        volumeMounts:
        - mountPath: /build/bundled-cacerts
          name: build-cacerts
        - mountPath: /usr/local/share/istio-auto-ca-root-cert
          name: istio-auto-ca-root-cert
        - mountPath: /usr/local/share/istio-auto-ca
          name: istio-auto-ca
      securityContext:
        fsGroup: 1337
      volumes:
      - emptyDir: {}
        name: build-cacerts
      - emptyDir:
          medium: Memory
        name: istio-envoy
      - emptyDir: {}
        name: istio-data
      - downwardAPI:
          items:
          - fieldRef:
              fieldPath: metadata.labels
            path: labels
          - fieldRef:
              fieldPath: metadata.annotations
            path: annotations
          - path: cpu-limit
            resourceFieldRef:
              containerName: istio-proxy
              divisor: 1m
              resource: limits.cpu
          - path: cpu-request
            resourceFieldRef:
              containerName: istio-proxy
              divisor: 1m
              resource: requests.cpu
        name: istio-podinfo
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              audience: istio-ca
              expirationSeconds: 43200
              path: istio-token
      - configMap:
          name: istio-ca-root-cert
        name: istiod-ca-cert
      - emptyDir: {}
        name: istio-auto-ca-root-cert
      - emptyDir: {}
        name: istio-auto-ca
status: {}
---